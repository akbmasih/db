# /root/db/docker-compose.yml
# Docker Compose configuration for DB Server (10.0.0.5)

version: '3.8'

services:
  # PostgreSQL - Main database
  postgres:
    image: postgres:15-alpine
    container_name: lingudesk_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./init_data.sql:/docker-entrypoint-initdb.d/02-init_data.sql:ro
      - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "127.0.0.1:5432:5432"  # Only bind to localhost
    networks:
      - db_network
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO - Object storage
  minio:
    image: minio/minio:latest
    container_name: lingudesk_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
      MINIO_DOMAIN: ${MINIO_DOMAIN:-minio.local}
    volumes:
      - minio_data:/data
      - ./minio/policies:/policies:ro
    ports:
      - "127.0.0.1:9000:9000"  # API port
      - "127.0.0.1:9001:9001"  # Console port
    networks:
      - db_network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Redis - Caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: lingudesk_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - db_network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Client - Initialize buckets
  minio-init:
    image: minio/mc:latest
    container_name: lingudesk_minio_init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: /bin/sh
    command: /init_buckets.sh
    volumes:
      - ./minio/init_buckets.sh:/init_buckets.sh:ro
      - ./minio/policies:/policies:ro
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    networks:
      - db_network

  # PgBouncer - Connection pooling (optional but recommended)
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: lingudesk_pgbouncer
    restart: unless-stopped
    environment:
      DATABASES_HOST: postgres
      DATABASES_PORT: 5432
      DATABASES_DBNAME: ${POSTGRES_DB}
      DATABASES_USER: ${POSTGRES_USER}
      DATABASES_PASSWORD: ${POSTGRES_PASSWORD}
      POOL_MODE: session
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 25
    ports:
      - "127.0.0.1:6432:6432"
    networks:
      - db_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  db_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24